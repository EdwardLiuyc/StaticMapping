.\" Automatically generated by Pod::Man 4.12 (Pod::Simple 3.39)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GEODESICPROJ 1"
.TH GEODESICPROJ 1 "2019-12-12" "GeographicLib 1.50.1" "GeographicLib Utilities"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
GeodesicProj \-\- perform projections based on geodesics
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBGeodesicProj\fR ( \fB\-z\fR | \fB\-c\fR | \fB\-g\fR ) \fIlat0\fR \fIlon0\fR [ \fB\-r\fR ]
[ \fB\-e\fR \fIa\fR \fIf\fR ] [ \fB\-w\fR ] [ \fB\-p\fR \fIprec\fR ]
[ \fB\-\-comment\-delimiter\fR \fIcommentdelim\fR ]
[ \fB\-\-version\fR | \fB\-h\fR | \fB\-\-help\fR ]
[ \fB\-\-input\-file\fR \fIinfile\fR | \fB\-\-input\-string\fR \fIinstring\fR ]
[ \fB\-\-line\-separator\fR \fIlinesep\fR ]
[ \fB\-\-output\-file\fR \fIoutfile\fR ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Perform projections based on geodesics.  Convert geodetic coordinates to
either azimuthal equidistant, Cassini-Soldner, or gnomonic coordinates.
The center of the projection (\fIlat0\fR, \fIlon0\fR) is specified by either
the \fB\-c\fR option (for Cassini-Soldner), the \fB\-z\fR option (for azimuthal
equidistant), or the \fB\-g\fR option (for gnomonic).  At least one of these
options must be given (the last one given is used).
.PP
Geodetic coordinates are provided on standard input as a set of lines
containing (blank separated) \fIlatitude\fR and \fIlongitude\fR (decimal
degrees or degrees, minutes, seconds); for details on the allowed
formats for latitude and longitude, see the \f(CW\*(C`GEOGRAPHIC COORDINATES\*(C'\fR
section of \fBGeoConvert\fR\|(1).  For each set of geodetic coordinates, the
corresponding projected coordinates \fIx\fR, \fIy\fR (meters) are printed on
standard output together with the azimuth \fIazi\fR (degrees) and
reciprocal scale \fIrk\fR.  For Cassini-Soldner, \fIazi\fR is the bearing of
the easting direction and the scale in the easting direction is 1 and
the scale in the northing direction is 1/\fIrk\fR.  For azimuthal
equidistant and gnomonic, \fIazi\fR is the bearing of the radial direction
and the scale in the azimuthal direction is 1/\fIrk\fR.  For azimuthal
equidistant and gnomonic, the scales in the radial direction are 1 and
1/\fIrk\fR^2, respectively.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-z\fR \fIlat0\fR \fIlon0\fR" 4
.IX Item "-z lat0 lon0"
use the azimuthal equidistant projection centered at latitude = \fIlat0\fR,
longitude = \fIlon0\fR.  The \fB\-w\fR flag can be used to swap the default
order of the 2 coordinates, provided that it appears before \fB\-z\fR.
.IP "\fB\-c\fR \fIlat0\fR \fIlon0\fR" 4
.IX Item "-c lat0 lon0"
use the Cassini-Soldner projection centered at latitude = \fIlat0\fR,
longitude = \fIlon0\fR.  The \fB\-w\fR flag can be used to swap the default
order of the 2 coordinates, provided that it appears before \fB\-c\fR.
.IP "\fB\-g\fR \fIlat0\fR \fIlon0\fR" 4
.IX Item "-g lat0 lon0"
use the ellipsoidal gnomonic projection centered at latitude = \fIlat0\fR,
longitude = \fIlon0\fR.  The \fB\-w\fR flag can be used to swap the default
order of the 2 coordinates, provided that it appears before \fB\-g\fR.
.IP "\fB\-r\fR" 4
.IX Item "-r"
perform the reverse projection.  \fIx\fR and \fIy\fR are given on standard
input and each line of standard output gives \fIlatitude\fR, \fIlongitude\fR,
\&\fIazi\fR, and \fIrk\fR.
.IP "\fB\-e\fR \fIa\fR \fIf\fR" 4
.IX Item "-e a f"
specify the ellipsoid via the equatorial radius, \fIa\fR and
the flattening, \fIf\fR.  Setting \fIf\fR = 0 results in a sphere.  Specify
\&\fIf\fR < 0 for a prolate ellipsoid.  A simple fraction, e.g., 1/297,
is allowed for \fIf\fR.  By default, the \s-1WGS84\s0 ellipsoid is used, \fIa\fR =
6378137 m, \fIf\fR = 1/298.257223563.
.IP "\fB\-w\fR" 4
.IX Item "-w"
toggle the longitude first flag (it starts off); if the flag is on, then
on input and output, longitude precedes latitude (except that, on input,
this can be overridden by a hemisphere designator, \fIN\fR, \fIS\fR, \fIE\fR,
\&\fIW\fR).
.IP "\fB\-p\fR \fIprec\fR" 4
.IX Item "-p prec"
set the output precision to \fIprec\fR (default 6).  \fIprec\fR is the number
of digits after the decimal point for lengths (in meters).  For
latitudes, longitudes, and azimuths (in degrees), the number of digits
after the decimal point is \fIprec\fR + 5.  For the scale, the number of
digits after the decimal point is \fIprec\fR + 6.
.IP "\fB\-\-comment\-delimiter\fR \fIcommentdelim\fR" 4
.IX Item "--comment-delimiter commentdelim"
set the comment delimiter to \fIcommentdelim\fR (e.g., \*(L"#\*(R" or \*(L"//\*(R").  If
set, the input lines will be scanned for this delimiter and, if found,
the delimiter and the rest of the line will be removed prior to
processing and subsequently appended to the output line (separated by a
space).
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
print version and exit.
.IP "\fB\-h\fR" 4
.IX Item "-h"
print usage and exit.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
print full documentation and exit.
.IP "\fB\-\-input\-file\fR \fIinfile\fR" 4
.IX Item "--input-file infile"
read input from the file \fIinfile\fR instead of from standard input; a file
name of \*(L"\-\*(R" stands for standard input.
.IP "\fB\-\-input\-string\fR \fIinstring\fR" 4
.IX Item "--input-string instring"
read input from the string \fIinstring\fR instead of from standard input.
All occurrences of the line separator character (default is a semicolon)
in \fIinstring\fR are converted to newlines before the reading begins.
.IP "\fB\-\-line\-separator\fR \fIlinesep\fR" 4
.IX Item "--line-separator linesep"
set the line separator character to \fIlinesep\fR.  By default this is a
semicolon.
.IP "\fB\-\-output\-file\fR \fIoutfile\fR" 4
.IX Item "--output-file outfile"
write output to the file \fIoutfile\fR instead of to standard output; a
file name of \*(L"\-\*(R" stands for standard output.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 4
\&   echo 48.648 \-2.007 | GeodesicProj \-c 48.836 2.337
\&   => \-319919 \-11791 86.7 0.999
\&   echo \-319919 \-11791 | GeodesicProj \-c 48.836 2.337 \-r
\&   => 48.648 \-2.007 86.7 0.999
.Ve
.SH "ERRORS"
.IX Header "ERRORS"
An illegal line of input will print an error message to standard output
beginning with \f(CW\*(C`ERROR:\*(C'\fR and causes \fBGeodesicProj\fR to return an exit
code of 1.  However, an error does not cause \fBGeodesicProj\fR to
terminate; following lines will be converted.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The ellipsoidal gnomonic projection is derived in Section 8 of
C. F. F. Karney, \fIAlgorithms for geodesics\fR, J. Geodesy 87, 43\-55 (2013); \s-1DOI\s0
<https://doi.org/10.1007/s00190\-012\-0578\-z>;
addenda: <https://geographiclib.sourceforge.io/geod\-addenda.html>.
.SH "AUTHOR"
.IX Header "AUTHOR"
\&\fBGeodesicProj\fR was written by Charles Karney.
.SH "HISTORY"
.IX Header "HISTORY"
\&\fBGeodesicProj\fR was added to GeographicLib,
<https://geographiclib.sourceforge.io>, in 2009\-08.
Prior to version 1.9 it was called EquidistantTest.
